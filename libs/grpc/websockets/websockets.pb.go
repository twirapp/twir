// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: websockets/websockets.proto

package websockets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RefreshOverlaySettingsName int32

const (
	RefreshOverlaySettingsName_CUSTOM      RefreshOverlaySettingsName = 0
	RefreshOverlaySettingsName_KAPPAGEN    RefreshOverlaySettingsName = 1
	RefreshOverlaySettingsName_BRB         RefreshOverlaySettingsName = 2
	RefreshOverlaySettingsName_DUDES       RefreshOverlaySettingsName = 3
	RefreshOverlaySettingsName_CHAT        RefreshOverlaySettingsName = 4
	RefreshOverlaySettingsName_NOW_PLAYING RefreshOverlaySettingsName = 5
)

// Enum value maps for RefreshOverlaySettingsName.
var (
	RefreshOverlaySettingsName_name = map[int32]string{
		0: "CUSTOM",
		1: "KAPPAGEN",
		2: "BRB",
		3: "DUDES",
		4: "CHAT",
		5: "NOW_PLAYING",
	}
	RefreshOverlaySettingsName_value = map[string]int32{
		"CUSTOM":      0,
		"KAPPAGEN":    1,
		"BRB":         2,
		"DUDES":       3,
		"CHAT":        4,
		"NOW_PLAYING": 5,
	}
)

func (x RefreshOverlaySettingsName) Enum() *RefreshOverlaySettingsName {
	p := new(RefreshOverlaySettingsName)
	*p = x
	return p
}

func (x RefreshOverlaySettingsName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefreshOverlaySettingsName) Descriptor() protoreflect.EnumDescriptor {
	return file_websockets_websockets_proto_enumTypes[0].Descriptor()
}

func (RefreshOverlaySettingsName) Type() protoreflect.EnumType {
	return &file_websockets_websockets_proto_enumTypes[0]
}

func (x RefreshOverlaySettingsName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefreshOverlaySettingsName.Descriptor instead.
func (RefreshOverlaySettingsName) EnumDescriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{0}
}

type YoutubeAddSongToQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	EntityId      string                 `protobuf:"bytes,2,opt,name=entityId,proto3" json:"entityId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YoutubeAddSongToQueueRequest) Reset() {
	*x = YoutubeAddSongToQueueRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YoutubeAddSongToQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoutubeAddSongToQueueRequest) ProtoMessage() {}

func (x *YoutubeAddSongToQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoutubeAddSongToQueueRequest.ProtoReflect.Descriptor instead.
func (*YoutubeAddSongToQueueRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{0}
}

func (x *YoutubeAddSongToQueueRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *YoutubeAddSongToQueueRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type YoutubeRemoveSongFromQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	EntityId      string                 `protobuf:"bytes,2,opt,name=entityId,proto3" json:"entityId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YoutubeRemoveSongFromQueueRequest) Reset() {
	*x = YoutubeRemoveSongFromQueueRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YoutubeRemoveSongFromQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoutubeRemoveSongFromQueueRequest) ProtoMessage() {}

func (x *YoutubeRemoveSongFromQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoutubeRemoveSongFromQueueRequest.ProtoReflect.Descriptor instead.
func (*YoutubeRemoveSongFromQueueRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{1}
}

func (x *YoutubeRemoveSongFromQueueRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *YoutubeRemoveSongFromQueueRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type ObsSetSceneMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	SceneName     string                 `protobuf:"bytes,2,opt,name=sceneName,proto3" json:"sceneName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsSetSceneMessage) Reset() {
	*x = ObsSetSceneMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsSetSceneMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsSetSceneMessage) ProtoMessage() {}

func (x *ObsSetSceneMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsSetSceneMessage.ProtoReflect.Descriptor instead.
func (*ObsSetSceneMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{2}
}

func (x *ObsSetSceneMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsSetSceneMessage) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

type ObsToggleSourceMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	SourceName    string                 `protobuf:"bytes,2,opt,name=sourceName,proto3" json:"sourceName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsToggleSourceMessage) Reset() {
	*x = ObsToggleSourceMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsToggleSourceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsToggleSourceMessage) ProtoMessage() {}

func (x *ObsToggleSourceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsToggleSourceMessage.ProtoReflect.Descriptor instead.
func (*ObsToggleSourceMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{3}
}

func (x *ObsToggleSourceMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsToggleSourceMessage) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

type ObsToggleAudioMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	AudioSourceName string                 `protobuf:"bytes,2,opt,name=audioSourceName,proto3" json:"audioSourceName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ObsToggleAudioMessage) Reset() {
	*x = ObsToggleAudioMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsToggleAudioMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsToggleAudioMessage) ProtoMessage() {}

func (x *ObsToggleAudioMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsToggleAudioMessage.ProtoReflect.Descriptor instead.
func (*ObsToggleAudioMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{4}
}

func (x *ObsToggleAudioMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsToggleAudioMessage) GetAudioSourceName() string {
	if x != nil {
		return x.AudioSourceName
	}
	return ""
}

type ObsAudioSetVolumeMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	AudioSourceName string                 `protobuf:"bytes,2,opt,name=audioSourceName,proto3" json:"audioSourceName,omitempty"`
	Volume          uint32                 `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ObsAudioSetVolumeMessage) Reset() {
	*x = ObsAudioSetVolumeMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsAudioSetVolumeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsAudioSetVolumeMessage) ProtoMessage() {}

func (x *ObsAudioSetVolumeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsAudioSetVolumeMessage.ProtoReflect.Descriptor instead.
func (*ObsAudioSetVolumeMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{5}
}

func (x *ObsAudioSetVolumeMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsAudioSetVolumeMessage) GetAudioSourceName() string {
	if x != nil {
		return x.AudioSourceName
	}
	return ""
}

func (x *ObsAudioSetVolumeMessage) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type ObsAudioIncreaseVolumeMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	AudioSourceName string                 `protobuf:"bytes,2,opt,name=audioSourceName,proto3" json:"audioSourceName,omitempty"`
	Step            uint32                 `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ObsAudioIncreaseVolumeMessage) Reset() {
	*x = ObsAudioIncreaseVolumeMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsAudioIncreaseVolumeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsAudioIncreaseVolumeMessage) ProtoMessage() {}

func (x *ObsAudioIncreaseVolumeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsAudioIncreaseVolumeMessage.ProtoReflect.Descriptor instead.
func (*ObsAudioIncreaseVolumeMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{6}
}

func (x *ObsAudioIncreaseVolumeMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsAudioIncreaseVolumeMessage) GetAudioSourceName() string {
	if x != nil {
		return x.AudioSourceName
	}
	return ""
}

func (x *ObsAudioIncreaseVolumeMessage) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type ObsAudioDecreaseVolumeMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	AudioSourceName string                 `protobuf:"bytes,2,opt,name=audioSourceName,proto3" json:"audioSourceName,omitempty"`
	Step            uint32                 `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ObsAudioDecreaseVolumeMessage) Reset() {
	*x = ObsAudioDecreaseVolumeMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsAudioDecreaseVolumeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsAudioDecreaseVolumeMessage) ProtoMessage() {}

func (x *ObsAudioDecreaseVolumeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsAudioDecreaseVolumeMessage.ProtoReflect.Descriptor instead.
func (*ObsAudioDecreaseVolumeMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{7}
}

func (x *ObsAudioDecreaseVolumeMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsAudioDecreaseVolumeMessage) GetAudioSourceName() string {
	if x != nil {
		return x.AudioSourceName
	}
	return ""
}

func (x *ObsAudioDecreaseVolumeMessage) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type ObsAudioDisableOrEnableMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	AudioSourceName string                 `protobuf:"bytes,2,opt,name=audioSourceName,proto3" json:"audioSourceName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ObsAudioDisableOrEnableMessage) Reset() {
	*x = ObsAudioDisableOrEnableMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsAudioDisableOrEnableMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsAudioDisableOrEnableMessage) ProtoMessage() {}

func (x *ObsAudioDisableOrEnableMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsAudioDisableOrEnableMessage.ProtoReflect.Descriptor instead.
func (*ObsAudioDisableOrEnableMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{8}
}

func (x *ObsAudioDisableOrEnableMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ObsAudioDisableOrEnableMessage) GetAudioSourceName() string {
	if x != nil {
		return x.AudioSourceName
	}
	return ""
}

type ObsStopOrStartStream struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsStopOrStartStream) Reset() {
	*x = ObsStopOrStartStream{}
	mi := &file_websockets_websockets_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsStopOrStartStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsStopOrStartStream) ProtoMessage() {}

func (x *ObsStopOrStartStream) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsStopOrStartStream.ProtoReflect.Descriptor instead.
func (*ObsStopOrStartStream) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{9}
}

func (x *ObsStopOrStartStream) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type TTSMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Voice         string                 `protobuf:"bytes,3,opt,name=voice,proto3" json:"voice,omitempty"`
	Rate          string                 `protobuf:"bytes,4,opt,name=rate,proto3" json:"rate,omitempty"`
	Pitch         string                 `protobuf:"bytes,5,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Volume        string                 `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TTSMessage) Reset() {
	*x = TTSMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TTSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTSMessage) ProtoMessage() {}

func (x *TTSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTSMessage.ProtoReflect.Descriptor instead.
func (*TTSMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{10}
}

func (x *TTSMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TTSMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TTSMessage) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *TTSMessage) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *TTSMessage) GetPitch() string {
	if x != nil {
		return x.Pitch
	}
	return ""
}

func (x *TTSMessage) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type TTSSkipMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TTSSkipMessage) Reset() {
	*x = TTSSkipMessage{}
	mi := &file_websockets_websockets_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TTSSkipMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTSSkipMessage) ProtoMessage() {}

func (x *TTSSkipMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTSSkipMessage.ProtoReflect.Descriptor instead.
func (*TTSSkipMessage) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{11}
}

func (x *TTSSkipMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ObsCheckUserConnectedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsCheckUserConnectedRequest) Reset() {
	*x = ObsCheckUserConnectedRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsCheckUserConnectedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsCheckUserConnectedRequest) ProtoMessage() {}

func (x *ObsCheckUserConnectedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsCheckUserConnectedRequest.ProtoReflect.Descriptor instead.
func (*ObsCheckUserConnectedRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{12}
}

func (x *ObsCheckUserConnectedRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ObsCheckUserConnectedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         bool                   `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsCheckUserConnectedResponse) Reset() {
	*x = ObsCheckUserConnectedResponse{}
	mi := &file_websockets_websockets_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsCheckUserConnectedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsCheckUserConnectedResponse) ProtoMessage() {}

func (x *ObsCheckUserConnectedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsCheckUserConnectedResponse.ProtoReflect.Descriptor instead.
func (*ObsCheckUserConnectedResponse) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{13}
}

func (x *ObsCheckUserConnectedResponse) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

type TriggerAlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AlertId       string                 `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerAlertRequest) Reset() {
	*x = TriggerAlertRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerAlertRequest) ProtoMessage() {}

func (x *TriggerAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerAlertRequest.ProtoReflect.Descriptor instead.
func (*TriggerAlertRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{14}
}

func (x *TriggerAlertRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TriggerAlertRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

type RefreshOverlaysRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	ChannelId     string                     `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	OverlayName   RefreshOverlaySettingsName `protobuf:"varint,2,opt,name=overlay_name,json=overlayName,proto3,enum=websockets.RefreshOverlaySettingsName" json:"overlay_name,omitempty"`
	OverlayId     *string                    `protobuf:"bytes,3,opt,name=overlay_id,json=overlayId,proto3,oneof" json:"overlay_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshOverlaysRequest) Reset() {
	*x = RefreshOverlaysRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshOverlaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshOverlaysRequest) ProtoMessage() {}

func (x *RefreshOverlaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshOverlaysRequest.ProtoReflect.Descriptor instead.
func (*RefreshOverlaysRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{15}
}

func (x *RefreshOverlaysRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *RefreshOverlaysRequest) GetOverlayName() RefreshOverlaySettingsName {
	if x != nil {
		return x.OverlayName
	}
	return RefreshOverlaySettingsName_CUSTOM
}

func (x *RefreshOverlaysRequest) GetOverlayId() string {
	if x != nil && x.OverlayId != nil {
		return *x.OverlayId
	}
	return ""
}

type TriggerKappagenRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ChannelId     string                          `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Text          string                          `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Emotes        []*TriggerKappagenRequest_Emote `protobuf:"bytes,3,rep,name=emotes,proto3" json:"emotes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerKappagenRequest) Reset() {
	*x = TriggerKappagenRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerKappagenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerKappagenRequest) ProtoMessage() {}

func (x *TriggerKappagenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerKappagenRequest.ProtoReflect.Descriptor instead.
func (*TriggerKappagenRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{16}
}

func (x *TriggerKappagenRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TriggerKappagenRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TriggerKappagenRequest) GetEmotes() []*TriggerKappagenRequest_Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

type TriggerKappagenByEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Event         int32                  `protobuf:"varint,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerKappagenByEventRequest) Reset() {
	*x = TriggerKappagenByEventRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerKappagenByEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerKappagenByEventRequest) ProtoMessage() {}

func (x *TriggerKappagenByEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerKappagenByEventRequest.ProtoReflect.Descriptor instead.
func (*TriggerKappagenByEventRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{17}
}

func (x *TriggerKappagenByEventRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TriggerKappagenByEventRequest) GetEvent() int32 {
	if x != nil {
		return x.Event
	}
	return 0
}

type TriggerShowBrbRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Minutes       int32                  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Text          *string                `protobuf:"bytes,3,opt,name=text,proto3,oneof" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerShowBrbRequest) Reset() {
	*x = TriggerShowBrbRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerShowBrbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerShowBrbRequest) ProtoMessage() {}

func (x *TriggerShowBrbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerShowBrbRequest.ProtoReflect.Descriptor instead.
func (*TriggerShowBrbRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{18}
}

func (x *TriggerShowBrbRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TriggerShowBrbRequest) GetMinutes() int32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *TriggerShowBrbRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type TriggerHideBrbRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerHideBrbRequest) Reset() {
	*x = TriggerHideBrbRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerHideBrbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerHideBrbRequest) ProtoMessage() {}

func (x *TriggerHideBrbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerHideBrbRequest.ProtoReflect.Descriptor instead.
func (*TriggerHideBrbRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{19}
}

func (x *TriggerHideBrbRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type DudesJumpRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserDisplayName string                 `protobuf:"bytes,3,opt,name=user_display_name,json=userDisplayName,proto3" json:"user_display_name,omitempty"`
	UserName        string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserColor       string                 `protobuf:"bytes,5,opt,name=user_color,json=userColor,proto3" json:"user_color,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DudesJumpRequest) Reset() {
	*x = DudesJumpRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DudesJumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DudesJumpRequest) ProtoMessage() {}

func (x *DudesJumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DudesJumpRequest.ProtoReflect.Descriptor instead.
func (*DudesJumpRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{20}
}

func (x *DudesJumpRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *DudesJumpRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DudesJumpRequest) GetUserDisplayName() string {
	if x != nil {
		return x.UserDisplayName
	}
	return ""
}

func (x *DudesJumpRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DudesJumpRequest) GetUserColor() string {
	if x != nil {
		return x.UserColor
	}
	return ""
}

type DudesUserPunishedRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserDisplayName string                 `protobuf:"bytes,3,opt,name=user_display_name,json=userDisplayName,proto3" json:"user_display_name,omitempty"`
	UserName        string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DudesUserPunishedRequest) Reset() {
	*x = DudesUserPunishedRequest{}
	mi := &file_websockets_websockets_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DudesUserPunishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DudesUserPunishedRequest) ProtoMessage() {}

func (x *DudesUserPunishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DudesUserPunishedRequest.ProtoReflect.Descriptor instead.
func (*DudesUserPunishedRequest) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{21}
}

func (x *DudesUserPunishedRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *DudesUserPunishedRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DudesUserPunishedRequest) GetUserDisplayName() string {
	if x != nil {
		return x.UserDisplayName
	}
	return ""
}

func (x *DudesUserPunishedRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type TriggerKappagenRequest_Emote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Positions     []string               `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerKappagenRequest_Emote) Reset() {
	*x = TriggerKappagenRequest_Emote{}
	mi := &file_websockets_websockets_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerKappagenRequest_Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerKappagenRequest_Emote) ProtoMessage() {}

func (x *TriggerKappagenRequest_Emote) ProtoReflect() protoreflect.Message {
	mi := &file_websockets_websockets_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerKappagenRequest_Emote.ProtoReflect.Descriptor instead.
func (*TriggerKappagenRequest_Emote) Descriptor() ([]byte, []int) {
	return file_websockets_websockets_proto_rawDescGZIP(), []int{16, 0}
}

func (x *TriggerKappagenRequest_Emote) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TriggerKappagenRequest_Emote) GetPositions() []string {
	if x != nil {
		return x.Positions
	}
	return nil
}

var File_websockets_websockets_proto protoreflect.FileDescriptor

const file_websockets_websockets_proto_rawDesc = "" +
	"\n" +
	"\x1bwebsockets/websockets.proto\x12\n" +
	"websockets\x1a\x1bgoogle/protobuf/empty.proto\"X\n" +
	"\x1cYoutubeAddSongToQueueRequest\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12\x1a\n" +
	"\bentityId\x18\x02 \x01(\tR\bentityId\"]\n" +
	"!YoutubeRemoveSongFromQueueRequest\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12\x1a\n" +
	"\bentityId\x18\x02 \x01(\tR\bentityId\"P\n" +
	"\x12ObsSetSceneMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12\x1c\n" +
	"\tsceneName\x18\x02 \x01(\tR\tsceneName\"V\n" +
	"\x16ObsToggleSourceMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12\x1e\n" +
	"\n" +
	"sourceName\x18\x02 \x01(\tR\n" +
	"sourceName\"_\n" +
	"\x15ObsToggleAudioMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12(\n" +
	"\x0faudioSourceName\x18\x02 \x01(\tR\x0faudioSourceName\"z\n" +
	"\x18ObsAudioSetVolumeMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12(\n" +
	"\x0faudioSourceName\x18\x02 \x01(\tR\x0faudioSourceName\x12\x16\n" +
	"\x06volume\x18\x03 \x01(\rR\x06volume\"{\n" +
	"\x1dObsAudioIncreaseVolumeMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12(\n" +
	"\x0faudioSourceName\x18\x02 \x01(\tR\x0faudioSourceName\x12\x12\n" +
	"\x04step\x18\x03 \x01(\rR\x04step\"{\n" +
	"\x1dObsAudioDecreaseVolumeMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12(\n" +
	"\x0faudioSourceName\x18\x02 \x01(\tR\x0faudioSourceName\x12\x12\n" +
	"\x04step\x18\x03 \x01(\rR\x04step\"h\n" +
	"\x1eObsAudioDisableOrEnableMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12(\n" +
	"\x0faudioSourceName\x18\x02 \x01(\tR\x0faudioSourceName\"4\n" +
	"\x14ObsStopOrStartStream\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\"\x96\x01\n" +
	"\n" +
	"TTSMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x14\n" +
	"\x05voice\x18\x03 \x01(\tR\x05voice\x12\x12\n" +
	"\x04rate\x18\x04 \x01(\tR\x04rate\x12\x14\n" +
	"\x05pitch\x18\x05 \x01(\tR\x05pitch\x12\x16\n" +
	"\x06volume\x18\x06 \x01(\tR\x06volume\".\n" +
	"\x0eTTSSkipMessage\x12\x1c\n" +
	"\tchannelId\x18\x01 \x01(\tR\tchannelId\"7\n" +
	"\x1cObsCheckUserConnectedRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"5\n" +
	"\x1dObsCheckUserConnectedResponse\x12\x14\n" +
	"\x05state\x18\x01 \x01(\bR\x05state\"O\n" +
	"\x13TriggerAlertRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x19\n" +
	"\balert_id\x18\x02 \x01(\tR\aalertId\"\xb5\x01\n" +
	"\x16RefreshOverlaysRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12I\n" +
	"\foverlay_name\x18\x02 \x01(\x0e2&.websockets.RefreshOverlaySettingsNameR\voverlayName\x12\"\n" +
	"\n" +
	"overlay_id\x18\x03 \x01(\tH\x00R\toverlayId\x88\x01\x01B\r\n" +
	"\v_overlay_id\"\xc4\x01\n" +
	"\x16TriggerKappagenRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12@\n" +
	"\x06emotes\x18\x03 \x03(\v2(.websockets.TriggerKappagenRequest.EmoteR\x06emotes\x1a5\n" +
	"\x05Emote\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tpositions\x18\x02 \x03(\tR\tpositions\"T\n" +
	"\x1dTriggerKappagenByEventRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x14\n" +
	"\x05event\x18\x02 \x01(\x05R\x05event\"r\n" +
	"\x15TriggerShowBrbRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x18\n" +
	"\aminutes\x18\x02 \x01(\x05R\aminutes\x12\x17\n" +
	"\x04text\x18\x03 \x01(\tH\x00R\x04text\x88\x01\x01B\a\n" +
	"\x05_text\"6\n" +
	"\x15TriggerHideBrbRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"\xb2\x01\n" +
	"\x10DudesJumpRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12*\n" +
	"\x11user_display_name\x18\x03 \x01(\tR\x0fuserDisplayName\x12\x1b\n" +
	"\tuser_name\x18\x04 \x01(\tR\buserName\x12\x1d\n" +
	"\n" +
	"user_color\x18\x05 \x01(\tR\tuserColor\"\x9b\x01\n" +
	"\x18DudesUserPunishedRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12*\n" +
	"\x11user_display_name\x18\x03 \x01(\tR\x0fuserDisplayName\x12\x1b\n" +
	"\tuser_name\x18\x04 \x01(\tR\buserName*e\n" +
	"\x1aRefreshOverlaySettingsName\x12\n" +
	"\n" +
	"\x06CUSTOM\x10\x00\x12\f\n" +
	"\bKAPPAGEN\x10\x01\x12\a\n" +
	"\x03BRB\x10\x02\x12\t\n" +
	"\x05DUDES\x10\x03\x12\b\n" +
	"\x04CHAT\x10\x04\x12\x0f\n" +
	"\vNOW_PLAYING\x10\x052\xa1\x0f\n" +
	"\tWebsocket\x12[\n" +
	"\x15YoutubeAddSongToQueue\x12(.websockets.YoutubeAddSongToQueueRequest\x1a\x16.google.protobuf.Empty\"\x00\x12c\n" +
	"\x18YoutubeRemoveSongToQueue\x12-.websockets.YoutubeRemoveSongFromQueueRequest\x1a\x16.google.protobuf.Empty\"\x00\x12p\n" +
	"\x17ObsCheckIsUserConnected\x12(.websockets.ObsCheckUserConnectedRequest\x1a).websockets.ObsCheckUserConnectedResponse\"\x00\x12G\n" +
	"\vObsSetScene\x12\x1e.websockets.ObsSetSceneMessage\x1a\x16.google.protobuf.Empty\"\x00\x12O\n" +
	"\x0fObsToggleSource\x12\".websockets.ObsToggleSourceMessage\x1a\x16.google.protobuf.Empty\"\x00\x12M\n" +
	"\x0eObsToggleAudio\x12!.websockets.ObsToggleAudioMessage\x1a\x16.google.protobuf.Empty\"\x00\x12S\n" +
	"\x11ObsAudioSetVolume\x12$.websockets.ObsAudioSetVolumeMessage\x1a\x16.google.protobuf.Empty\"\x00\x12]\n" +
	"\x16ObsAudioIncreaseVolume\x12).websockets.ObsAudioIncreaseVolumeMessage\x1a\x16.google.protobuf.Empty\"\x00\x12]\n" +
	"\x16ObsAudioDecreaseVolume\x12).websockets.ObsAudioDecreaseVolumeMessage\x1a\x16.google.protobuf.Empty\"\x00\x12V\n" +
	"\x0eObsAudioEnable\x12*.websockets.ObsAudioDisableOrEnableMessage\x1a\x16.google.protobuf.Empty\"\x00\x12W\n" +
	"\x0fObsAudioDisable\x12*.websockets.ObsAudioDisableOrEnableMessage\x1a\x16.google.protobuf.Empty\"\x00\x12K\n" +
	"\rObsStopStream\x12 .websockets.ObsStopOrStartStream\x1a\x16.google.protobuf.Empty\"\x00\x12L\n" +
	"\x0eObsStartStream\x12 .websockets.ObsStopOrStartStream\x1a\x16.google.protobuf.Empty\"\x00\x12C\n" +
	"\x0fTextToSpeechSay\x12\x16.websockets.TTSMessage\x1a\x16.google.protobuf.Empty\"\x00\x12H\n" +
	"\x10TextToSpeechSkip\x12\x1a.websockets.TTSSkipMessage\x1a\x16.google.protobuf.Empty\"\x00\x12I\n" +
	"\fTriggerAlert\x12\x1f.websockets.TriggerAlertRequest\x1a\x16.google.protobuf.Empty\"\x00\x12O\n" +
	"\x0fTriggerKappagen\x12\".websockets.TriggerKappagenRequest\x1a\x16.google.protobuf.Empty\"\x00\x12]\n" +
	"\x16TriggerKappagenByEvent\x12).websockets.TriggerKappagenByEventRequest\x1a\x16.google.protobuf.Empty\"\x00\x12M\n" +
	"\x0eTriggerShowBrb\x12!.websockets.TriggerShowBrbRequest\x1a\x16.google.protobuf.Empty\"\x00\x12M\n" +
	"\x0eTriggerHideBrb\x12!.websockets.TriggerHideBrbRequest\x1a\x16.google.protobuf.Empty\"\x00\x12V\n" +
	"\x16RefreshOverlaySettings\x12\".websockets.RefreshOverlaysRequest\x1a\x16.google.protobuf.Empty\"\x00\x12C\n" +
	"\tDudesJump\x12\x1c.websockets.DudesJumpRequest\x1a\x16.google.protobuf.Empty\"\x00\x12S\n" +
	"\x11DudesUserPunished\x12$.websockets.DudesUserPunishedRequest\x1a\x16.google.protobuf.Empty\"\x00B.Z,github.com/twirapp/twir/libs/grpc/websocketsb\x06proto3"

var (
	file_websockets_websockets_proto_rawDescOnce sync.Once
	file_websockets_websockets_proto_rawDescData []byte
)

func file_websockets_websockets_proto_rawDescGZIP() []byte {
	file_websockets_websockets_proto_rawDescOnce.Do(func() {
		file_websockets_websockets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_websockets_websockets_proto_rawDesc), len(file_websockets_websockets_proto_rawDesc)))
	})
	return file_websockets_websockets_proto_rawDescData
}

var file_websockets_websockets_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_websockets_websockets_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_websockets_websockets_proto_goTypes = []any{
	(RefreshOverlaySettingsName)(0),           // 0: websockets.RefreshOverlaySettingsName
	(*YoutubeAddSongToQueueRequest)(nil),      // 1: websockets.YoutubeAddSongToQueueRequest
	(*YoutubeRemoveSongFromQueueRequest)(nil), // 2: websockets.YoutubeRemoveSongFromQueueRequest
	(*ObsSetSceneMessage)(nil),                // 3: websockets.ObsSetSceneMessage
	(*ObsToggleSourceMessage)(nil),            // 4: websockets.ObsToggleSourceMessage
	(*ObsToggleAudioMessage)(nil),             // 5: websockets.ObsToggleAudioMessage
	(*ObsAudioSetVolumeMessage)(nil),          // 6: websockets.ObsAudioSetVolumeMessage
	(*ObsAudioIncreaseVolumeMessage)(nil),     // 7: websockets.ObsAudioIncreaseVolumeMessage
	(*ObsAudioDecreaseVolumeMessage)(nil),     // 8: websockets.ObsAudioDecreaseVolumeMessage
	(*ObsAudioDisableOrEnableMessage)(nil),    // 9: websockets.ObsAudioDisableOrEnableMessage
	(*ObsStopOrStartStream)(nil),              // 10: websockets.ObsStopOrStartStream
	(*TTSMessage)(nil),                        // 11: websockets.TTSMessage
	(*TTSSkipMessage)(nil),                    // 12: websockets.TTSSkipMessage
	(*ObsCheckUserConnectedRequest)(nil),      // 13: websockets.ObsCheckUserConnectedRequest
	(*ObsCheckUserConnectedResponse)(nil),     // 14: websockets.ObsCheckUserConnectedResponse
	(*TriggerAlertRequest)(nil),               // 15: websockets.TriggerAlertRequest
	(*RefreshOverlaysRequest)(nil),            // 16: websockets.RefreshOverlaysRequest
	(*TriggerKappagenRequest)(nil),            // 17: websockets.TriggerKappagenRequest
	(*TriggerKappagenByEventRequest)(nil),     // 18: websockets.TriggerKappagenByEventRequest
	(*TriggerShowBrbRequest)(nil),             // 19: websockets.TriggerShowBrbRequest
	(*TriggerHideBrbRequest)(nil),             // 20: websockets.TriggerHideBrbRequest
	(*DudesJumpRequest)(nil),                  // 21: websockets.DudesJumpRequest
	(*DudesUserPunishedRequest)(nil),          // 22: websockets.DudesUserPunishedRequest
	(*TriggerKappagenRequest_Emote)(nil),      // 23: websockets.TriggerKappagenRequest.Emote
	(*emptypb.Empty)(nil),                     // 24: google.protobuf.Empty
}
var file_websockets_websockets_proto_depIdxs = []int32{
	0,  // 0: websockets.RefreshOverlaysRequest.overlay_name:type_name -> websockets.RefreshOverlaySettingsName
	23, // 1: websockets.TriggerKappagenRequest.emotes:type_name -> websockets.TriggerKappagenRequest.Emote
	1,  // 2: websockets.Websocket.YoutubeAddSongToQueue:input_type -> websockets.YoutubeAddSongToQueueRequest
	2,  // 3: websockets.Websocket.YoutubeRemoveSongToQueue:input_type -> websockets.YoutubeRemoveSongFromQueueRequest
	13, // 4: websockets.Websocket.ObsCheckIsUserConnected:input_type -> websockets.ObsCheckUserConnectedRequest
	3,  // 5: websockets.Websocket.ObsSetScene:input_type -> websockets.ObsSetSceneMessage
	4,  // 6: websockets.Websocket.ObsToggleSource:input_type -> websockets.ObsToggleSourceMessage
	5,  // 7: websockets.Websocket.ObsToggleAudio:input_type -> websockets.ObsToggleAudioMessage
	6,  // 8: websockets.Websocket.ObsAudioSetVolume:input_type -> websockets.ObsAudioSetVolumeMessage
	7,  // 9: websockets.Websocket.ObsAudioIncreaseVolume:input_type -> websockets.ObsAudioIncreaseVolumeMessage
	8,  // 10: websockets.Websocket.ObsAudioDecreaseVolume:input_type -> websockets.ObsAudioDecreaseVolumeMessage
	9,  // 11: websockets.Websocket.ObsAudioEnable:input_type -> websockets.ObsAudioDisableOrEnableMessage
	9,  // 12: websockets.Websocket.ObsAudioDisable:input_type -> websockets.ObsAudioDisableOrEnableMessage
	10, // 13: websockets.Websocket.ObsStopStream:input_type -> websockets.ObsStopOrStartStream
	10, // 14: websockets.Websocket.ObsStartStream:input_type -> websockets.ObsStopOrStartStream
	11, // 15: websockets.Websocket.TextToSpeechSay:input_type -> websockets.TTSMessage
	12, // 16: websockets.Websocket.TextToSpeechSkip:input_type -> websockets.TTSSkipMessage
	15, // 17: websockets.Websocket.TriggerAlert:input_type -> websockets.TriggerAlertRequest
	17, // 18: websockets.Websocket.TriggerKappagen:input_type -> websockets.TriggerKappagenRequest
	18, // 19: websockets.Websocket.TriggerKappagenByEvent:input_type -> websockets.TriggerKappagenByEventRequest
	19, // 20: websockets.Websocket.TriggerShowBrb:input_type -> websockets.TriggerShowBrbRequest
	20, // 21: websockets.Websocket.TriggerHideBrb:input_type -> websockets.TriggerHideBrbRequest
	16, // 22: websockets.Websocket.RefreshOverlaySettings:input_type -> websockets.RefreshOverlaysRequest
	21, // 23: websockets.Websocket.DudesJump:input_type -> websockets.DudesJumpRequest
	22, // 24: websockets.Websocket.DudesUserPunished:input_type -> websockets.DudesUserPunishedRequest
	24, // 25: websockets.Websocket.YoutubeAddSongToQueue:output_type -> google.protobuf.Empty
	24, // 26: websockets.Websocket.YoutubeRemoveSongToQueue:output_type -> google.protobuf.Empty
	14, // 27: websockets.Websocket.ObsCheckIsUserConnected:output_type -> websockets.ObsCheckUserConnectedResponse
	24, // 28: websockets.Websocket.ObsSetScene:output_type -> google.protobuf.Empty
	24, // 29: websockets.Websocket.ObsToggleSource:output_type -> google.protobuf.Empty
	24, // 30: websockets.Websocket.ObsToggleAudio:output_type -> google.protobuf.Empty
	24, // 31: websockets.Websocket.ObsAudioSetVolume:output_type -> google.protobuf.Empty
	24, // 32: websockets.Websocket.ObsAudioIncreaseVolume:output_type -> google.protobuf.Empty
	24, // 33: websockets.Websocket.ObsAudioDecreaseVolume:output_type -> google.protobuf.Empty
	24, // 34: websockets.Websocket.ObsAudioEnable:output_type -> google.protobuf.Empty
	24, // 35: websockets.Websocket.ObsAudioDisable:output_type -> google.protobuf.Empty
	24, // 36: websockets.Websocket.ObsStopStream:output_type -> google.protobuf.Empty
	24, // 37: websockets.Websocket.ObsStartStream:output_type -> google.protobuf.Empty
	24, // 38: websockets.Websocket.TextToSpeechSay:output_type -> google.protobuf.Empty
	24, // 39: websockets.Websocket.TextToSpeechSkip:output_type -> google.protobuf.Empty
	24, // 40: websockets.Websocket.TriggerAlert:output_type -> google.protobuf.Empty
	24, // 41: websockets.Websocket.TriggerKappagen:output_type -> google.protobuf.Empty
	24, // 42: websockets.Websocket.TriggerKappagenByEvent:output_type -> google.protobuf.Empty
	24, // 43: websockets.Websocket.TriggerShowBrb:output_type -> google.protobuf.Empty
	24, // 44: websockets.Websocket.TriggerHideBrb:output_type -> google.protobuf.Empty
	24, // 45: websockets.Websocket.RefreshOverlaySettings:output_type -> google.protobuf.Empty
	24, // 46: websockets.Websocket.DudesJump:output_type -> google.protobuf.Empty
	24, // 47: websockets.Websocket.DudesUserPunished:output_type -> google.protobuf.Empty
	25, // [25:48] is the sub-list for method output_type
	2,  // [2:25] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_websockets_websockets_proto_init() }
func file_websockets_websockets_proto_init() {
	if File_websockets_websockets_proto != nil {
		return
	}
	file_websockets_websockets_proto_msgTypes[15].OneofWrappers = []any{}
	file_websockets_websockets_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_websockets_websockets_proto_rawDesc), len(file_websockets_websockets_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_websockets_websockets_proto_goTypes,
		DependencyIndexes: file_websockets_websockets_proto_depIdxs,
		EnumInfos:         file_websockets_websockets_proto_enumTypes,
		MessageInfos:      file_websockets_websockets_proto_msgTypes,
	}.Build()
	File_websockets_websockets_proto = out.File
	file_websockets_websockets_proto_goTypes = nil
	file_websockets_websockets_proto_depIdxs = nil
}
