/* eslint-disable */
// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size,generate_dependencies,eslint_disable,server_none
// @generated from protobuf file "api.proto" (package "api", syntax proto3)
// tslint:disable
import { SayResponse } from "./messages/modules_tts/modules_tts";
import { SayRequest } from "./messages/modules_tts/modules_tts";
import { TwitchSearchChannelsResponse } from "./messages/twitch/twitch";
import { TwitchSearchChannelsRequest } from "./messages/twitch/twitch";
import { TwitchGetUsersResponse } from "./messages/twitch/twitch";
import { TwitchGetUsersRequest } from "./messages/twitch/twitch";
import { PostCodeRequest as PostCodeRequest$6 } from "./messages/integrations_valorant/integrations_valorant";
import { GetDataResponse as GetDataResponse$6 } from "./messages/integrations_valorant/integrations_valorant";
import { GetAuthLink as GetAuthLink$6 } from "./messages/integrations_valorant/integrations_valorant";
import { ParseHtmlOverlayResponse } from "./messages/overlays/overlays";
import { ParseHtmlOverlayRequest } from "./messages/overlays/overlays";
import { CreateRequest } from "./messages/overlays/overlays";
import { DeleteRequest } from "./messages/overlays/overlays";
import { UpdateRequest } from "./messages/overlays/overlays";
import { Overlay } from "./messages/overlays/overlays";
import { GetByIdRequest } from "./messages/overlays/overlays";
import { GetAllResponse } from "./messages/overlays/overlays";
import { SetChannelInformationRequest } from "./messages/twitch_protected/twitch_protected";
import { GetCategoriesRequest } from "./messages/twitch_protected/twitch_protected";
import { SearchCategoriesResponse } from "./messages/twitch_protected/twitch_protected";
import { SearchCategoriesRequest } from "./messages/twitch_protected/twitch_protected";
import { Settings } from "./messages/overlays_be_right_back/overlays_be_right_back";
import { UsersDeleteRequest } from "./messages/modules_tts/modules_tts";
import { GetUsersSettingsResponse } from "./messages/modules_tts/modules_tts";
import { GetInfoResponse } from "./messages/modules_tts/modules_tts";
import { PostRequest as PostRequest$ } from "./messages/modules_tts/modules_tts";
import { GetResponse as GetResponse$ } from "./messages/modules_tts/modules_tts";
import { PostRequest } from "./messages/modules_obs_websocket/modules_obs_websocket";
import { GetResponse } from "./messages/modules_obs_websocket/modules_obs_websocket";
import { GetGuildInfoResponse } from "./messages/integrations_discord/integrations_discord";
import { GetGuildInfoRequest } from "./messages/integrations_discord/integrations_discord";
import { GetGuildChannelsResponse } from "./messages/integrations_discord/integrations_discord";
import { GetGuildChannelsRequest } from "./messages/integrations_discord/integrations_discord";
import { DisconnectGuildMessage } from "./messages/integrations_discord/integrations_discord";
import { PostCodeRequest as PostCodeRequest$5 } from "./messages/integrations_discord/integrations_discord";
import { UpdateMessage } from "./messages/integrations_discord/integrations_discord";
import { GetDataResponse as GetDataResponse$5 } from "./messages/integrations_discord/integrations_discord";
import { GetAuthLink as GetAuthLink$5 } from "./messages/integrations_discord/integrations_discord";
import { PostCodeRequest as PostCodeRequest$4 } from "./messages/integrations_vk/integrations_vk";
import { GetDataResponse as GetDataResponse$4 } from "./messages/integrations_vk/integrations_vk";
import { GetAuthLink as GetAuthLink$4 } from "./messages/integrations_vk/integrations_vk";
import { ImportTimersResponse } from "./messages/integrations_nightbot/integrations_nightbot";
import { ImportCommandsResponse } from "./messages/integrations_nightbot/integrations_nightbot";
import { PostCodeRequest as PostCodeRequest$3 } from "./messages/integrations_nightbot/integrations_nightbot";
import { GetDataResponse as GetDataResponse$3 } from "./messages/integrations_nightbot/integrations_nightbot";
import { GetAuthLink as GetAuthLink$3 } from "./messages/integrations_nightbot/integrations_nightbot";
import { PostCodeRequest as PostCodeRequest$2 } from "./messages/integrations_streamlabs/integrations_streamlabs";
import { GetDataResponse as GetDataResponse$2 } from "./messages/integrations_streamlabs/integrations_streamlabs";
import { GetAuthLink as GetAuthLink$2 } from "./messages/integrations_streamlabs/integrations_streamlabs";
import { PostCodeRequest as PostCodeRequest$ } from "./messages/integrations_lastfm/integrations_lastfm";
import { GetDataResponse as GetDataResponse$ } from "./messages/integrations_lastfm/integrations_lastfm";
import { GetAuthLink as GetAuthLink$ } from "./messages/integrations_lastfm/integrations_lastfm";
import { PostCodeRequest } from "./messages/integrations_faceit/integrations_faceit";
import { UpdateDataRequest } from "./messages/integrations_faceit/integrations_faceit";
import { GetDataResponse } from "./messages/integrations_faceit/integrations_faceit";
import { GetAuthLink } from "./messages/integrations_faceit/integrations_faceit";
import { Empty } from "./google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service api.Protected
 */
export const Protected = new ServiceType("api.Protected", [
    { name: "IntegrationsFaceitGetAuthLink", options: {}, I: Empty, O: GetAuthLink },
    { name: "IntegrationsFaceitGetData", options: {}, I: Empty, O: GetDataResponse },
    { name: "IntegrationsFaceitUpdate", options: {}, I: UpdateDataRequest, O: Empty },
    { name: "IntegrationsFaceitPostCode", options: {}, I: PostCodeRequest, O: Empty },
    { name: "IntegrationsFaceitLogout", options: {}, I: Empty, O: Empty },
    { name: "IntegrationsLastFMGetAuthLink", options: {}, I: Empty, O: GetAuthLink$ },
    { name: "IntegrationsLastFMGetData", options: {}, I: Empty, O: GetDataResponse$ },
    { name: "IntegrationsLastFMPostCode", options: {}, I: PostCodeRequest$, O: Empty },
    { name: "IntegrationsLastFMLogout", options: {}, I: Empty, O: Empty },
    { name: "IntegrationsStreamlabsGetAuthLink", options: {}, I: Empty, O: GetAuthLink$2 },
    { name: "IntegrationsStreamlabsGetData", options: {}, I: Empty, O: GetDataResponse$2 },
    { name: "IntegrationsStreamlabsPostCode", options: {}, I: PostCodeRequest$2, O: Empty },
    { name: "IntegrationsStreamlabsLogout", options: {}, I: Empty, O: Empty },
    { name: "IntegrationsNightbotGetAuthLink", options: {}, I: Empty, O: GetAuthLink$3 },
    { name: "IntegrationsNightbotGetData", options: {}, I: Empty, O: GetDataResponse$3 },
    { name: "IntegrationsNightbotPostCode", options: {}, I: PostCodeRequest$3, O: Empty },
    { name: "IntegrationsNightbotLogout", options: {}, I: Empty, O: Empty },
    { name: "IntegrationsNightbotImportCommands", options: {}, I: Empty, O: ImportCommandsResponse },
    { name: "IntegrationsNightbotImportTimers", options: {}, I: Empty, O: ImportTimersResponse },
    { name: "IntegrationsVKGetAuthLink", options: {}, I: Empty, O: GetAuthLink$4 },
    { name: "IntegrationsVKGetData", options: {}, I: Empty, O: GetDataResponse$4 },
    { name: "IntegrationsVKPostCode", options: {}, I: PostCodeRequest$4, O: Empty },
    { name: "IntegrationsVKLogout", options: {}, I: Empty, O: Empty },
    { name: "IntegrationsDiscordGetAuthLink", options: {}, I: Empty, O: GetAuthLink$5 },
    { name: "IntegrationsDiscordGetData", options: {}, I: Empty, O: GetDataResponse$5 },
    { name: "IntegrationsDiscordUpdate", options: {}, I: UpdateMessage, O: Empty },
    { name: "IntegrationDiscordConnectGuild", options: {}, I: PostCodeRequest$5, O: Empty },
    { name: "IntegrationsDiscordDisconnectGuild", options: {}, I: DisconnectGuildMessage, O: Empty },
    { name: "IntegrationsDiscordGetGuildChannels", options: {}, I: GetGuildChannelsRequest, O: GetGuildChannelsResponse },
    { name: "IntegrationsDiscordGetGuildInfo", options: {}, I: GetGuildInfoRequest, O: GetGuildInfoResponse },
    { name: "ModulesOBSWebsocketGet", options: {}, I: Empty, O: GetResponse },
    { name: "ModulesOBSWebsocketUpdate", options: {}, I: PostRequest, O: Empty },
    { name: "ModulesTTSGet", options: {}, I: Empty, O: GetResponse$ },
    { name: "ModulesTTSUpdate", options: {}, I: PostRequest$, O: Empty },
    { name: "ModulesTTSGetInfo", options: {}, I: Empty, O: GetInfoResponse },
    { name: "ModulesTTSGetUsersSettings", options: {}, I: Empty, O: GetUsersSettingsResponse },
    { name: "ModulesTTSUsersDelete", options: {}, I: UsersDeleteRequest, O: Empty },
    { name: "OverlayBeRightBackGet", options: {}, I: Empty, O: Settings },
    { name: "OverlayBeRightBackUpdate", options: {}, I: Settings, O: Settings },
    { name: "TwitchSearchCategories", options: {}, I: SearchCategoriesRequest, O: SearchCategoriesResponse },
    { name: "TwitchGetCategories", options: {}, I: GetCategoriesRequest, O: SearchCategoriesResponse },
    { name: "TwitchSetChannelInformation", options: {}, I: SetChannelInformationRequest, O: Empty },
    { name: "OverlaysGetAll", options: {}, I: Empty, O: GetAllResponse },
    { name: "OverlaysGetOne", options: {}, I: GetByIdRequest, O: Overlay },
    { name: "OverlaysUpdate", options: {}, I: UpdateRequest, O: Overlay },
    { name: "OverlaysDelete", options: {}, I: DeleteRequest, O: Empty },
    { name: "OverlaysCreate", options: {}, I: CreateRequest, O: Overlay },
    { name: "OverlaysParseHtml", options: {}, I: ParseHtmlOverlayRequest, O: ParseHtmlOverlayResponse },
    { name: "IntegrationsValorantGetAuthLink", options: {}, I: Empty, O: GetAuthLink$6 },
    { name: "IntegrationsValorantGetData", options: {}, I: Empty, O: GetDataResponse$6 },
    { name: "IntegrationsValorantPostCode", options: {}, I: PostCodeRequest$6, O: Empty },
    { name: "IntegrationsValorantLogout", options: {}, I: Empty, O: Empty }
]);
/**
 * @generated ServiceType for protobuf service api.UnProtected
 */
export const UnProtected = new ServiceType("api.UnProtected", [
    { name: "TwitchGetUsers", options: {}, I: TwitchGetUsersRequest, O: TwitchGetUsersResponse },
    { name: "TwitchSearchChannels", options: {}, I: TwitchSearchChannelsRequest, O: TwitchSearchChannelsResponse },
    { name: "ModulesTTSSay", options: {}, I: SayRequest, O: SayResponse }
]);
